| <%@ page contentType="text/html;charset=UTF-8" language="java" %>
| <%@ page import="ml.festival.aviation.SearchResultsDemo" %>
| <%@ page import="org.json.*" %>
| <%@ page import="java.time.*" %>
| <%@ page import="java.time.format.DateTimeFormatter"%>
| <%@ page import="java.sql.Time" %>
| 
| <%
| 	JSONObject demoData = new JSONObject();
| 
| 	if (request.getParameter("depart_iata") != null && request.getParameter("arrv_iata") != null && request.getParameter("depart_date") != null) {
| 		ZonedDateTime zonedDateTime = Instant.parse(request.getParameter("depart_date")).atZone(ZoneId.of("Europe/Berlin"));
| 		demoData = SearchResultsDemo.getDemoData(request.getParameter("depart_iata"), request.getParameter("arrv_iata"), zonedDateTime.toLocalDate());
| 	}
| %>
| 

doctype html
html
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no")
	
		title Suchen – FESTIVAL Aviation
		
		link(rel="stylesheet",href="css/aviation.css")
		link(rel="stylesheet",href="css/search.built.css")
	body
		include _nav
		
		section.search-results
			.section-content
				.search-results-container
					.search-results-header
						.row
							.column.column-12.medium-6
								.column-title
									img(src="img/icon-departure.svg")
									p Von
								input.column-content(value!="<%= demoData.has(\"departureName\") ? demoData.get(\"departureName\") : \"\" %>", placeholder="Abreiseort eingeben", required)
							.column.column-12.medium-6
								.column-title
									img(src="img/icon-arrival.svg")
									p Nach
								input.column-content(value!="<%= demoData.has(\"arrivalName\") ? demoData.get(\"arrivalName\") : \"\" %>", placeholder="Ankunftsort eingeben", required)
						.row
							.column.column-12.medium-6
								.column-title
									img(src="img/icon-date.svg")
									p Abflugdatum
								input.column-content(type="date", value!="<%= demoData.has(\"departureDate\") ? ((LocalDate)demoData.get(\"departureDate\")).format(DateTimeFormatter.ofPattern(\"EEEE, dd. MMMM yyyy\")) : \"\" %>", placeholder="Abflugdatum auswählen", required)
							.column.column-12.medium-2
								.column-title
									img(src="img/icon-passenger.svg")
									p Passagiere
								input.column-content(type="number",value="1",min="1",max="10")
							.column.column-12.medium-4
								.column-title
									img(src="img/icon-class.svg")
									p Klassen
								p.column-content Alle Klassen
					| 
					| <%
					| 	if (demoData.has("items")) {
					| 	 	for (int i=0; i<((JSONArray)demoData.get("items")).length(); i++) {
					| 			JSONObject resultObj = ((JSONArray)demoData.get("items")).getJSONObject(i);
					| %>
					.scroll-container 
						.result-header
							h4.date #[span Abflug] – <%= ((LocalDate)resultObj.get("departureDate")).format(DateTimeFormatter.ofPattern("dd MMM")) %>
							.table-header.row
								.column.column-2
									p <%= demoData.get("departureMunicipality") %>
								.column.column-2.align-right
									p <%= demoData.get("arrivalMunicipality") %>
								.column.column-2.column-offset-1
									p Dauer
								.column.column-1
									p Stopps
								.column.column-auto
									p Flugnummer
								.column.column-1.align-right
									p Preis
						| 
						| <%
						| 		for (int j=0; j<((JSONArray)resultObj.get("items")).length(); j++) {
						| 			JSONObject flightObj = ((JSONArray)resultObj.get("items")).getJSONObject(j);
						| %>
						.results
							.result-cell.row
								.column.column-2
									p <%= ((Time)flightObj.get("departureTime")).toLocalTime().format(DateTimeFormatter.ofPattern("HH:mm")) %>
								.column.column-2.align-right
									p <%= ((Time)flightObj.get("arrivalTime")).toLocalTime().format(DateTimeFormatter.ofPattern("HH:mm")) %>
								.column.column-2.column-offset-1
									| <%
									| 	LocalTime departureTime = ((Time)flightObj.get("departureTime")).toLocalTime();
									| 	LocalTime arrivalTime = ((Time)flightObj.get("arrivalTime")).toLocalTime();
									| 
									| 	Duration duration = null;
									| 	if (departureTime.toSecondOfDay() > arrivalTime.toSecondOfDay()) {
									| 		duration = Duration.between(arrivalTime, departureTime);
									| 	} else {
									| 		duration = Duration.between(departureTime, arrivalTime);
									| 	}
									| %>
									p <%= String.format("%02dh %02dmin", duration.getSeconds() / 3600, (duration.getSeconds() % 3600) / 60) %>
								.column.column-1
									p <%= flightObj.get("stops") %>
								.column.column-auto
									p <%= flightObj.get("flightNumber") %>
								.column.column-1.align-right
									p ab <%= flightObj.get("price") %>€
						| 
						| <%	} %>
					| 
					| <%
					| 		}
					| 	} 
					| %>
					.fill-background
					.results-footer
						