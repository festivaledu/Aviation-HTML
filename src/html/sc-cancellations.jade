| <%@ page contentType="text/html;charset=UTF-8" %>
| <%@ page import="javax.naming.InitialContext" %>
| <%@ page import="javax.naming.Context" %>
| <%@ page import="javax.sql.DataSource" %>
| <%@ page import="java.sql.Connection" %>
| <%@ page import="java.sql.PreparedStatement" %>
| <%@ page import="java.sql.ResultSet" %>
| 
| <%
| 	InitialContext initialContext;
| 	Context environmentContext;
| 	DataSource dataSource;
| 	Connection conn = null;
| 
| 	String holder = "";
| 	String ticketId = "";
| 	String svid = "";
| 	String email = "";
| 	String message = "";
| 
| 	boolean invalid = false;
| 	boolean send = false;
| 	boolean error = false;
| 	boolean inputError = false;
| 
| 	request.setCharacterEncoding("UTF-8");
| 
| 	if ("POST".equals(request.getMethod())) {
| 		holder = request.getParameter("holder");
| 		ticketId = request.getParameter("ticketId");
| 		svid = request.getParameter("svid");
| 		email = request.getParameter("email");
| 		message = request.getParameter("message");
| 
| 		if (holder != null && !holder.isEmpty() && ticketId != null && !ticketId.isEmpty() && email != null && !email.isEmpty() && svid != null && !svid.isEmpty()) {
| 			try {
| 				initialContext = new InitialContext();
| 				environmentContext = (Context)initialContext.lookup("java:/comp/env");
| 				dataSource = (DataSource)environmentContext.lookup("jdbc/aviation");
| 				conn = dataSource.getConnection();
| 
| 				PreparedStatement statement = conn.prepareStatement("SELECT svid, holder FROM tickets WHERE id = ?");
| 
| 				statement.setString(1, ticketId);
| 
| 				ResultSet ticket = statement.executeQuery();
| 
| 				if (ticket != null && ticket.next()) {
| 				    if (ticket.getString("holder").equals(holder) && ticket.getString("svid").equals(svid)) {
| 						statement = conn.prepareStatement("INSERT INTO `cancellations` VALUES (DEFAULT, ?, ?, ?)");
| 
| 						statement.setString(1, ticketId);
| 						statement.setString(2, email);
| 						statement.setString(3, message);
| 
| 						statement.execute();
| 
| 						send = true;
| 					} else {
| 				        inputError = true;
| 					}
| 				} else {
| 				    error = true;
| 				}
| 			} catch (Exception e) {
| 				error = true;
| 				e.printStackTrace();
| 			}
| 		} else {
| 			invalid = true;
| 		}
| 	}
| %>

doctype html
html
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no")
	
		title Stornierungen – FESTIVAL Aviation Support
		
		link(rel="stylesheet", href="css/aviation.css")
		link(rel="stylesheet", href="css/support-center.built.css")
	body
		include _nav

		include _sc-modal
		
		.content-wrapper
			section.support
				.section-content.row.reversed
					.column.column-3
						ul.sc-menu
							li.menu-item.heading Support
							a.menu-item(href="sc-index.jsp")
								li FAQ
							a.menu-item(href="sc-contact.jsp")
								li Kontakt
							a.menu-item.selected(href="sc-cancellations.jsp")
								li Stornierungen
							a.menu-item(href="sc-complaints.jsp")
								li Beschwerden
							a.menu-item(href="sc-rights.html")
								li Fluggastrechte
						
						//- article(class="ad")
						//- 	img(src="https://www.visitfinland.com/app/uploads/Header_Helsinki_aerial-1600x900.jpg")
						//- 	div(class="content")
						//- 		h4 Entdecke Helsinki
						//- 		p Schon ab 159€ pro Person
						//- 		button Jetzt Buchen

					.column.column-8.offset-1
						h2 Stornierungen

						| 
						| <%
						| 	if (send) {
						| %>

						article(class="flag success")
							div(class="header")
								div(class="icon")
									span
										span(class="ai ai-success")
								span(class="title") Ticket storniert
							div(class="content")
								p Du hast das Ticket erfolgreich storniert. Die Gutschrift erfolgt in Kürze.

						| 
						| <%
						| 	}
						| 
						| 	if (error) {
						| %>

						article(class="flag error")
							div(class="header")
								div(class="icon")
									span
										span(class="ai ai-error")
								span(class="title") Hier funktioniert etwas nicht
							div(class="content")
								p Beim Absenden deiner Stornierung ist ein Fehler aufgetreten. Bitte versuch es später noch einmal oder überprüfe deine Ticket-ID.

						| 
						| <%
						| 	}
						| 
						| 	if (invalid) {
						| %>

						article(class="flag error")
							div(class="header")
								div(class="icon")
									span
										span(class="ai ai-error")
								span(class="title") Ungültige Eingabe
							div(class="content")
								p Du musst alle Felder, die nicht als optional gekennzeichnet sind, ausfüllen.

						| 
						| <%
						| 	}
						| 
						| 	if (inputError) {
						| %>

						article(class="flag error")
							div(class="header")
								div(class="icon")
									span
										span(class="ai ai-error")
								span(class="title") Ungültige Eingabe
							div(class="content")
								p Deine Eingaben sind nicht korrekt. Überprüfe die Felder bitte auf ihre Richtigkeit. Wenn der Fehler weiterhin auftritt versuch das Ticket über das Dashboard zu stornieren oder #[a(href="sc-contact.jsp") melde dich bei uns].

						| 
						| <%
						| 	}
						| %>

						article(class="flag warning")
							div(class="header")
								div(class="icon")
									span
										span(class="ai ai-warning")
								span(class="title") Hinweis
							div(class="content")
								p Wenn du auf den Account, mit dem das Ticket gekauft wurde, Zugriff hast, storniere dein Ticket bitte im #[a(href="dashboard.jsp") Dashboard]. Nur wenn du dein Ticket ohne Account erworben hast oder keinen Zugriff auf den Account hast, solltest du dein Ticket hier stornieren.
						
						form(method="POST", action="sc-cancellations.jsp", novalidate)
							label(for="holder") Name des Passagiers
							input(type="text", name="holder", id="holder", value!="<%= holder %>")
							label(for="ticketId") Ticket-ID
							input(type="text", name="ticketId", id="ticketId", value!="<%= ticketId %>")
							a(class="help modal-trigger", data-modal-type="question", data-modal-title="Was ist die Ticket-ID?", data-modal-text="Die Ticket-ID ist eine für jedes Ticket einzigartige Nummer, die es ermöglicht ein Ticket eindeutig zu identifizieren. Sie befindet sich auf der Rechnung und am unteren Rand des Tickets.") Was ist das?
							label(for="verification") Storno-Verifizierungs-ID
							input(type="text", name="verification", id="verification")
							a(class="help modal-trigger", data-modal-type="question", data-modal-title="Was ist die Storno-Verifizierungs-ID?", data-modal-text="Bei der Storno-Verifizierungs-ID handelt es sich um eine Nummer die als Sicherheit benötigt wird, um die Stornierung durchzuführen. Die Storno-Verifizierungs-ID findest du in deiner Rechnung.") Was ist das?
							label(for="accountEmail") E-Mail-Adresse
							p(class="description") Gib hier die E-Mail-Adresse des Accounts an, der die Gutschrift bekommen soll.
							input(type="email", name="email", id="email", value!="<%= email %>")
							label(for="message") Grund der Stornierung (optional)
							textarea(name="message", id="message", rows="12") <%= message %>
							button(class="modal-trigger", data-modal-type="error", data-modal-title="Ticket wirklich stornieren?", data-modal-text="Wenn alle Eingaben korrekt sind, wird das Ticket unwiderruflich storniert und unbrauchbar. Die Stornierung kann nicht rückgängig gemacht werden.", data-modal-primary="Ticket stornieren", data-modal-primary-action="submit") Absenden
		include _footer
		
	script(src="js/support-center.js")
	script(src="js/modal.js")
	script(src="js/icons.js")

| 
| <%
| 	if (conn != null)
| 		conn.close();
| %>